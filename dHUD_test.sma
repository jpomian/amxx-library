/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <dHUD>

#define PLUGIN "dHUD Test"
#define VERSION "1.0"
#define AUTHOR "R3X"

new dhud, dhud2, dhud3;
new i=0;

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR);
	
	
	//dhud - W³asna œcie¿ka
	dhud = DHUD_create();
	DHUD_setFrame(dhud, 0, {255, 255, 255}, 0.3, 0.31);
	DHUD_setFrame(dhud, 1, {255, 255, 230}, 0.3, 0.32);
	DHUD_setFrame(dhud, 2, {255, 255, 205}, 0.3, 0.33);
	DHUD_setFrame(dhud, 3, {255, 255, 180}, 0.3, 0.34);
	DHUD_setFrame(dhud, 4, {255, 255, 155}, 0.3, 0.35);
	DHUD_setFrame(dhud, 5, {255, 255, 130}, 0.3, 0.36);
	DHUD_setFrame(dhud, 6, {255, 255, 105}, 0.3, 0.37);
	DHUD_setFrame(dhud, 7, {255, 255, 80}, 0.3, 0.38);
	DHUD_setFrame(dhud, 8, {255, 255, 55}, 0.3, 0.39);
	DHUD_setFrame(dhud, 9, {255, 255, 0}, 0.3, 0.4);
	
	//dhud2 - Kopia dhud + zmiana toru
	dhud2 = DHUD_create(dhud);
	DHUD_setFrame(dhud2, 0, {255, 255, 255}, 1.0, 0.0);
	DHUD_applyFilter(dhud2, "MoveStraight", 1, 9, -D_LONG, D_ZERO, -1.0, 1.0);
	
	
	//dhud3 - Wygenerowana œcie¿ka w kszta³cie sinusoidy
	DHUD_registerFilter("Sinus", "filterSinus", "Sinusoida");
	
	dhud3 = DHUD_create();
	DHUD_setFrame(dhud3, 90, {255, 255, 255}, 0.0, 0.0);//Tworzy 90 klatek

	DHUD_applyFilter(dhud3, "TransColor", 0, 45, D_ZERO, D_ZERO, {255, 0, 0}, {0, 255, 255});
	DHUD_applyFilter(dhud3, "TransColor", 45, 90, D_ZERO, D_ZERO, {0, 255, 255}, {0, 0, 0});
	DHUD_applyFilter(dhud3, "Sinus", 0, 90, D_SHORT);
	
	register_clcmd("dhud", "cmdDHUD");
	register_clcmd("dhud2", "cmdDHUD2");
	register_clcmd("dhud3", "cmdDHUD3");
}
public filterSinus(dhud, frame,startFrame, endFrame, Float:x, Float:y){
	new iColor[3], Float:oldx, Float:oldy, iLen;
	DHUD_getFrame(dhud, frame, iColor, oldx, oldy, iLen);
	
	DHUD_setFrame(dhud, frame, iColor, x, floatsin(x*10-30)/5+0.4, iLen);
}
public cmdDHUD(id){
	DHUD_clear(id, dhud3);
	DHUD_display(id, dhud,  _, 1, "Test #%d", i++);
	return PLUGIN_HANDLED;
}
public cmdDHUD2(id){
	DHUD_display(id, dhud2, _, 2, "Test #%d", i++);
	return PLUGIN_HANDLED;
}
public cmdDHUD3(id){
	DHUD_display(id, dhud3, _, 3, "Test #%d", i++);
	return PLUGIN_HANDLED;
}

public fwStopAnimation(id, dhud, bool:finished){
	client_print(id, print_chat, "%s %d",finished?"Finished":"Interrupted", dhud);
}

